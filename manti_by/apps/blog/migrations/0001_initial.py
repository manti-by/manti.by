# Generated by Django 5.1.6 on 2025-02-18 14:34

import django.db.models.deletion
import manti_by.apps.core.utils
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("taggit", "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx"),
    ]

    operations = [
        migrations.CreateModel(
            name="GenresProxy",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_items",
                        to="taggit.tag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created", models.DateTimeField(auto_now_add=True, verbose_name="Created, UTC")),
                ("updated", models.DateTimeField(auto_now=True, verbose_name="Updated, UTC")),
                ("name", models.CharField(max_length=255)),
                ("name_be", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("name_ru", models.CharField(max_length=255, null=True)),
                ("slug", models.SlugField(unique=True, verbose_name="Slug")),
                ("meta", models.TextField()),
                ("meta_be", models.TextField(null=True)),
                ("meta_en", models.TextField(null=True)),
                ("meta_ru", models.TextField(null=True)),
                ("summary", models.TextField()),
                ("summary_be", models.TextField(null=True)),
                ("summary_en", models.TextField(null=True)),
                ("summary_ru", models.TextField(null=True)),
                ("description", models.TextField()),
                ("description_be", models.TextField(null=True)),
                ("description_en", models.TextField(null=True)),
                ("description_ru", models.TextField(null=True)),
                (
                    "release",
                    models.FileField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to=manti_by.apps.core.utils.release_name,
                        verbose_name="Release File",
                    ),
                ),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to=manti_by.apps.core.utils.cover_name,
                        verbose_name="Cover Image",
                    ),
                ),
                ("is_music", models.BooleanField(blank=True, default=False)),
                ("catnum", models.CharField(blank=True, max_length=16)),
                ("quality", models.CharField(blank=True, max_length=255)),
                ("length", models.CharField(blank=True, max_length=16)),
                ("tracklist", models.TextField(blank=True)),
                ("viewed", models.IntegerField(blank=True, default=0)),
                ("mp3_preview_ready", models.BooleanField(blank=True, default=False)),
                ("mp3_release_ready", models.BooleanField(blank=True, default=False)),
                ("ogg_preview_ready", models.BooleanField(blank=True, default=False)),
                ("ogg_release_ready", models.BooleanField(blank=True, default=False)),
                (
                    "genre",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="blog.GenresProxy",
                        to="taggit.Tag",
                        verbose_name="Genre",
                    ),
                ),
                ("related", models.ManyToManyField(blank=True, to="blog.post")),
            ],
            options={
                "verbose_name": "post",
                "verbose_name_plural": "posts",
            },
        ),
        migrations.AddField(
            model_name="genresproxy",
            name="content_object",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="blog.post"),
        ),
        migrations.CreateModel(
            name="TagsProxy",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("content_object", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="blog.post")),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_items",
                        to="taggit.tag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="post",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="blog.TagsProxy",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
    ]
